/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("getMessageFromHeaders", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_ARRAY,  NULL), &AbstractStubServer::getMessageFromHeadersI);
            this->bindAndAddMethod(jsonrpc::Procedure("getMessage", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_ARRAY, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::getMessageI);
            this->bindAndAddMethod(jsonrpc::Procedure("deleteMessage", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::deleteMessageI);
            this->bindAndAddMethod(jsonrpc::Procedure("sendMessage", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_OBJECT,"param2",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::sendMessageI);
            this->bindAndAddMethod(jsonrpc::Procedure("login", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::loginI);
        }

        inline virtual void getMessageFromHeadersI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->getMessageFromHeaders();
        }
        inline virtual void getMessageI(const Json::Value &request, Json::Value &response)
        {
            response = this->getMessage(request[0u].asString());
        }
        inline virtual void deleteMessageI(const Json::Value &request, Json::Value &response)
        {
            response = this->deleteMessage(request[0u].asString());
        }
        inline virtual void sendMessageI(const Json::Value &request, Json::Value &response)
        {
            response = this->sendMessage(request[0u], request[1u].asString());
        }
        inline virtual void loginI(const Json::Value &request, Json::Value &response)
        {
            response = this->login(request[0u].asString());
        }
        virtual Json::Value getMessageFromHeaders() = 0;
        virtual Json::Value getMessage(const std::string& param1) = 0;
        virtual bool deleteMessage(const std::string& param1) = 0;
        virtual bool sendMessage(const Json::Value& param1, const std::string& param2) = 0;
        virtual bool login(const std::string& param1) = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
